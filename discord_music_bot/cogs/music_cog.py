import discord
from discord.ext import commands
import asyncio
import logging
from discord_music_bot.audio_source import YTDLSource
from discord_music_bot.utils import format_duration

# –°–ª–æ–≤–Ω–∏–∫–∏ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –º—É–∑–∏–∫–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ (–∫—Ä–∞—â–µ —ñ–Ω–∫–∞–ø—Å—É–ª—é–≤–∞—Ç–∏ –≤ Cog)
music_queues = {}
current_song = {}

# --- –ö–ª–∞—Å –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫–µ—Ä—É–≤–∞–Ω–Ω—è ---
class MusicControls(discord.ui.View):
    def __init__(self, ctx, cog, timeout=None): # None - –∫–Ω–æ–ø–∫–∏ –Ω–µ –∑–Ω–∏–∫–Ω—É—Ç—å
        super().__init__(timeout=timeout)
        self.ctx = ctx
        self.cog = cog # –ü–µ—Ä–µ–¥–∞—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä Cog –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –π–æ–≥–æ –º–µ—Ç–æ–¥—ñ–≤/—Å—Ç–∞–Ω—É

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á, —â–æ –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É, –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ç–æ–º—É –∂ –∫–∞–Ω–∞–ª—ñ, —â–æ –π –±–æ—Ç
        if not self.ctx.voice_client:
             await interaction.response.send_message("–ë–æ—Ç –Ω–∞—Ä–∞–∑—ñ –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—ñ.", ephemeral=True)
             return False
        if not interaction.user.voice or interaction.user.voice.channel != self.ctx.voice_client.channel:
            await interaction.response.send_message("–í–∏ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –≤ —Ç–æ–º—É –∂ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—ñ, —â–æ –π –±–æ—Ç, —â–æ–± –∫–µ—Ä—É–≤–∞—Ç–∏ –º—É–∑–∏–∫–æ—é.", ephemeral=True)
            return False
        return True

    # –î–∏–Ω–∞–º—ñ—á–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ü–∞—É–∑–∞/–í—ñ–¥–Ω–æ–≤–∏—Ç–∏
    @discord.ui.button(label="–ü–∞—É–∑–∞", style=discord.ButtonStyle.secondary, emoji="‚è∏Ô∏è", custom_id="pause_resume")
    async def pause_resume_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        voice_client = self.ctx.voice_client
        if voice_client and voice_client.is_playing():
            voice_client.pause()
            button.label = "–í—ñ–¥–Ω–æ–≤–∏—Ç–∏"
            button.emoji = "‚ñ∂Ô∏è"
            await interaction.response.edit_message(view=self)
        elif voice_client and voice_client.is_paused():
            voice_client.resume()
            button.label = "–ü–∞—É–∑–∞"
            button.emoji = "‚è∏Ô∏è"
            await interaction.response.edit_message(view=self)
        else:
            await interaction.response.send_message("–ó–∞—Ä–∞–∑ –Ω—ñ—á–æ–≥–æ –Ω–µ –≥—Ä–∞—î –∞–±–æ –Ω–µ –Ω–∞ –ø–∞—É–∑—ñ.", ephemeral=True)

    @discord.ui.button(label="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏", style=discord.ButtonStyle.primary, emoji="‚è≠Ô∏è", custom_id="skip")
    async def skip_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        voice_client = self.ctx.voice_client
        if voice_client and (voice_client.is_playing() or voice_client.is_paused()):
            voice_client.stop() # –ó—É–ø–∏–Ω–∫–∞ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ç—Ä–µ–∫—É –≤–∏–∫–ª–∏—á–µ 'after' -> play_next_song
            await interaction.response.send_message(f"‚è≠Ô∏è –¢—Ä–µ–∫ –ø—Ä–æ–ø—É—â–µ–Ω–æ {interaction.user.mention}.", ephemeral=False)
            # –û–Ω–æ–≤–ª—é—î–º–æ –≤–∏–≥–ª—è–¥ –∫–Ω–æ–ø–æ–∫ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ —Ü–µ –±—É–≤ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ç—Ä–µ–∫)
            # –ê–±–æ –º–æ–∂–Ω–∞ –ø—Ä–æ—Å—Ç–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏
            # await interaction.message.delete()
        else:
            await interaction.response.send_message("–ù—ñ—á–æ–≥–æ –ø—Ä–æ–ø—É—Å–∫–∞—Ç–∏.", ephemeral=True)

    @discord.ui.button(label="–ß–µ—Ä–≥–∞", style=discord.ButtonStyle.secondary, emoji="üìÑ", custom_id="queue")
    async def queue_button(self, interaction: discord.Interaction, button: discord.ui.Button):
         command = self.cog.bot.get_command('queue')
         if command:
             await interaction.response.defer(ephemeral=True)
             # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∑ —ñ–Ω—Ç–µ—Ä–∞–∫—Ü—ñ—ó, —â–æ–± –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É
             # –¶–µ –º–æ–∂–µ –±—É—Ç–∏ —Å–∫–ª–∞–¥–Ω–æ, –ø—Ä–æ—Å—Ç—ñ—à–µ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–∞–Ω–¥–∏ queue
             await self.cog.queue(self.ctx) # –í–∏–∫–ª–∏–∫–∞—î–º–æ –º–µ—Ç–æ–¥ –∫–æ–≥–∞
             # –ü–æ—Ç—Ä—ñ–±–Ω–æ —è–∫–æ—Å—å –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –Ω–∞ —ñ–Ω—Ç–µ—Ä–∞–∫—Ü—ñ—é, –º–æ–∂–ª–∏–≤–æ, –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º –ø—Ä–æ —É—Å–ø—ñ—Ö
             await interaction.followup.send("–ü–æ–∫–∞–∑–∞–Ω–æ —á–µ—Ä–≥—É.", ephemeral=True)
         else:
              await interaction.response.send_message("–ö–æ–º–∞–Ω–¥–∞ !queue –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)

    @discord.ui.button(label="–í–∏–π—Ç–∏", style=discord.ButtonStyle.danger, emoji="üö™", custom_id="leave")
    async def leave_button(self, interaction: discord.Interaction, button: discord.ui.Button):
         voice_client = self.ctx.voice_client
         if voice_client and voice_client.is_connected():
             await self.cog.leave_logic(self.ctx) # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–≥—ñ–∫—É –≤–∏—Ö–æ–¥—É –∑ –∫–æ–≥–∞
             await interaction.response.send_message(f"üëã –ë–æ—Ç –≤–∏–π—à–æ–≤ –∑ –∫–∞–Ω–∞–ª—É –∑–∞ –∫–æ–º–∞–Ω–¥–æ—é {interaction.user.mention}.", ephemeral=False)
             self.stop() # –†–æ–±–∏–º–æ –∫–Ω–æ–ø–∫–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–º–∏
             # –ú–æ–∂–Ω–∞ –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏
             # await interaction.message.delete()
         else:
             await interaction.response.send_message("–ë–æ—Ç –Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π –¥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É.", ephemeral=True)


class MusicCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.music_queues = {}
        self.current_song = {}
        self.control_messages = {} # –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ –∫–Ω–æ–ø–∫–∞–º–∏

    async def play_next_song(self, ctx):
        """–í—ñ–¥—Ç–≤–æ—Ä—é—î –Ω–∞—Å—Ç—É–ø–Ω—É –ø—ñ—Å–Ω—é –≤ —á–µ—Ä–∑—ñ."""
        guild_id = ctx.guild.id
        logging.info(f"[{guild_id}] Entering play_next_song") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
        if guild_id in self.music_queues and self.music_queues[guild_id]:
            voice_client = discord.utils.get(self.bot.voice_clients, guild=ctx.guild)
            if voice_client and not voice_client.is_playing():
                source_info = self.music_queues[guild_id].pop(0)
                url_or_query = source_info['url']
                requester = source_info['requester']
                logging.info(f"[{guild_id}] Attempting to get source for: {url_or_query}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è

                player = await YTDLSource.from_url(url_or_query, loop=self.bot.loop, stream=True)

                if player:
                    logging.info(f"[{guild_id}] Successfully got source: {player.title}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
                    self.current_song[guild_id] = {
                        'player': player,
                        'requester': requester,
                        'title': player.title,
                        'url': player.url,
                        'thumbnail': player.thumbnail,
                        'duration': player.duration
                    }
                    logging.info(f"[{guild_id}] Attempting to play source: {player.title}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
                    try:
                        voice_client.play(player, after=lambda e: self.bot.loop.create_task(self.check_after_play(ctx, e)))
                        logging.info(f"[{guild_id}] Successfully started playing: {player.title}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
                    except Exception as e:
                        logging.error(f"[{guild_id}] Error starting playback for {player.title}: {e}", exc_info=True)
                        await ctx.send(f"‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–ø—É—Å–∫—É –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è: `{e}`. –ü—Ä–æ–±—É—é –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ç—Ä–µ–∫...")
                        # –ù–µ–≥–∞–π–Ω–æ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ç—Ä–µ–∫ —É —Ä–∞–∑—ñ –ø–æ–º–∏–ª–∫–∏ –∑–∞–ø—É—Å–∫—É
                        await self.play_next_song(ctx)
                        return # –í–∏–π—Ç–∏, —â–æ–± –Ω–µ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ embed –¥–ª—è —Ç—Ä–µ–∫—É, —â–æ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–≤—Å—è

                    embed = discord.Embed(
                        title="üé∂ –ó–∞—Ä–∞–∑ –≥—Ä–∞—î",
                        description=f"[{player.title}]({player.url})",
                        color=discord.Color.blue()
                    )
                    if player.thumbnail:
                        embed.set_thumbnail(url=player.thumbnail)
                    if player.duration:
                        embed.add_field(name="–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å", value=format_duration(player.duration), inline=True)
                    embed.add_field(name="–ó–∞–º–æ–≤–∏–≤(–ª–∞)", value=requester.mention, inline=True)

                    # –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏, —è–∫—â–æ –≤–æ–Ω–æ —î
                    if guild_id in self.control_messages:
                        try:
                            old_msg = await ctx.fetch_message(self.control_messages[guild_id])
                            await old_msg.delete()
                        except discord.NotFound:
                            pass # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–∂–µ –≤–∏–¥–∞–ª–µ–Ω–æ
                        except discord.Forbidden:
                            pass # –ù–µ–º–∞—î –ø—Ä–∞–≤ –≤–∏–¥–∞–ª—è—Ç–∏
                        del self.control_messages[guild_id]

                    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏
                    view = MusicControls(ctx, self)
                    msg = await ctx.send(embed=embed, view=view)
                    self.control_messages[guild_id] = msg.id # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –Ω–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è

                else:
                    logging.error(f"[{guild_id}] Failed to get source for: {url_or_query}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
                    await ctx.send(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç—Ä–µ–∫: {url_or_query}. –ü—Ä–æ–±—É—é –Ω–∞—Å—Ç—É–ø–Ω–∏–π...")
                    await self.play_next_song(ctx)
        else:
            logging.info(f"[{guild_id}] Queue is empty or bot is already playing.") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
            if guild_id in self.current_song:
                del self.current_song[guild_id]
            # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏, –∫–æ–ª–∏ —á–µ—Ä–≥–∞ –ø–æ—Ä–æ–∂–Ω—è
            if guild_id in self.control_messages:
                 try:
                     old_msg = await ctx.fetch_message(self.control_messages[guild_id])
                     await old_msg.delete()
                 except (discord.NotFound, discord.Forbidden):
                     pass
                 del self.control_messages[guild_id]

            await asyncio.sleep(60) # –ß–µ–∫–∞—î–º–æ –ø–µ—Ä–µ–¥ –≤–∏—Ö–æ–¥–æ–º
            voice_client = discord.utils.get(self.bot.voice_clients, guild=ctx.guild)
            if voice_client and not voice_client.is_playing() and not (guild_id in self.music_queues and self.music_queues[guild_id]):
                logging.info(f"[{guild_id}] Leaving voice channel due to inactivity.") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
                await voice_client.disconnect()
                await ctx.send("üéµ –ß–µ—Ä–≥–∞ –ø–æ—Ä–æ–∂–Ω—è. –í–∏—Ö–æ–¥–∂—É –∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É.")
        logging.info(f"[{guild_id}] Exiting play_next_song") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è

    async def check_after_play(self, ctx, error):
        """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—Ä–µ–∫—É."""
        guild_id = ctx.guild.id
        logging.info(f"[{guild_id}] Entering check_after_play. Error: {error}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è

        voice_client = discord.utils.get(self.bot.voice_clients, guild=ctx.guild)

        if error:
            logging.error(f'[{guild_id}] –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è: {error}')
            await ctx.send(f"‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è: `{error}`")
            # –°–ø—Ä–æ–±—É—î–º–æ –∑—É–ø–∏–Ω–∏—Ç–∏ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –æ—á–∏—Å—Ç–∏—Ç–∏ —Å—Ç–∞–Ω
            if voice_client and voice_client.is_playing():
                logging.warning(f"[{guild_id}] –ó—É–ø–∏–Ω—è—é voice_client —á–µ—Ä–µ–∑ –ø–æ–º–∏–ª–∫—É.")
                voice_client.stop()
            if guild_id in self.current_song:
                logging.info(f"[{guild_id}] –û—á–∏—â–∞—é current_song —á–µ—Ä–µ–∑ –ø–æ–º–∏–ª–∫—É.")
                del self.current_song[guild_id]
            # –ù–µ –≤–∏–∫–ª–∏–∫–∞—î–º–æ play_next_song –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –ø–æ–º–∏–ª–∫–∏, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ —Ü–∏–∫–ª—É
            logging.info(f"[{guild_id}] –ù–µ –≤–∏–∫–ª–∏–∫–∞—é play_next_song —á–µ—Ä–µ–∑ –ø–æ–º–∏–ª–∫—É –≤ after callback.")
            return # –í–∏—Ö–æ–¥–∏–º–æ, —â–æ–± –Ω–µ –ø—Ä–æ–¥–æ–≤–∂—É–≤–∞—Ç–∏ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è

        # –û—á–∏—Å—Ç–∫–∞ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ç—Ä–µ–∫—É –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
        # cleanup() –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–æ—é discord.py –ø–µ—Ä–µ–¥ after callback
        if guild_id in self.current_song:
             logging.info(f"[{guild_id}] –û—á–∏—â–∞—é current_song –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è.")
             del self.current_song[guild_id]

        # –ù–µ–≤–µ–ª–∏–∫–µ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–∏–º —Ç—Ä–µ–∫–æ–º
        await asyncio.sleep(0.5) # –ó–±—ñ–ª—å—à–µ–Ω–æ —á–∞—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è

        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –±–æ—Ç –≤—Å–µ—â–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π –ø–µ—Ä–µ–¥ —Å–ø—Ä–æ–±–æ—é –≥—Ä–∞—Ç–∏ –¥–∞–ª—ñ
        if voice_client and voice_client.is_connected():
            logging.info(f"[{guild_id}] –í–∏–∫–ª–∏–∫–∞—é play_next_song –∑ check_after_play.")
            await self.play_next_song(ctx)
        else:
            logging.info(f"[{guild_id}] –ù–µ –≤–∏–∫–ª–∏–∫–∞—é play_next_song, –±–æ—Ç –Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π.")
        logging.info(f"[{guild_id}] Exiting check_after_play.") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è

    async def leave_logic(self, ctx):
        """–õ–æ–≥—ñ–∫–∞ –≤–∏—Ö–æ–¥—É –±–æ—Ç–∞ –∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É."""
        guild_id = ctx.guild.id
        voice_client = discord.utils.get(self.bot.voice_clients, guild=ctx.guild)

        if voice_client and voice_client.is_connected():
            # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞–Ω—É
            if guild_id in self.music_queues:
                self.music_queues[guild_id].clear()
            if guild_id in self.current_song:
                del self.current_song[guild_id]
            # –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏
            if guild_id in self.control_messages:
                try:
                    msg = await ctx.fetch_message(self.control_messages[guild_id])
                    await msg.delete()
                except (discord.NotFound, discord.Forbidden):
                    pass
                del self.control_messages[guild_id]

            await voice_client.disconnect()
            return True
        return False

    @commands.command(name='join', help='–ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ –±–æ—Ç–∞ –¥–æ –≤–∞—à–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É.')
    async def join(self, ctx):
        """–ü—ñ–¥–∫–ª—é—á–∞—î –±–æ—Ç–∞ –¥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞."""
        guild_id = ctx.guild.id
        logging.info(f"[{guild_id}] Join command invoked by {ctx.author.name}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
        if not ctx.author.voice:
            await ctx.send(f"{ctx.author.mention}, –≤–∏ –Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω—ñ –¥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É!")
            return

        channel = ctx.author.voice.channel
        voice_client = discord.utils.get(self.bot.voice_clients, guild=ctx.guild)

        if voice_client and voice_client.is_connected():
            if voice_client.channel != channel:
                logging.info(f"[{guild_id}] Moving to channel: {channel.name}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
                await voice_client.move_to(channel)
                await ctx.send(f"–ü–µ—Ä–µ–º—ñ—Å—Ç–∏–≤—Å—è –¥–æ –∫–∞–Ω–∞–ª—É: **{channel.name}**")
            else:
                logging.info(f"[{guild_id}] Already in channel: {channel.name}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
                await ctx.send(f"–Ø –≤–∂–µ —É –≤–∞—à–æ–º—É –∫–∞–Ω–∞–ª—ñ: **{channel.name}**")
        else:
            try:
                logging.info(f"[{guild_id}] Connecting to channel: {channel.name}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
                await channel.connect()
                logging.info(f"[{guild_id}] Successfully connected to channel: {channel.name}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
                await ctx.send(f"–ü—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –∫–∞–Ω–∞–ª—É: **{channel.name}**")
            except discord.ClientException as e:
                 logging.error(f"[{guild_id}] Failed to connect to channel {channel.name}: {e}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
                 await ctx.send(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è: {e}")
            except Exception as e:
                 logging.error(f"[{guild_id}] Unknown error connecting to channel {channel.name}: {e}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
                 await ctx.send("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–ø—Ä–æ–±—ñ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è.")

    @commands.command(name='leave', aliases=['disconnect'], help='–í—ñ–¥–∫–ª—é—á–∏—Ç–∏ –±–æ—Ç–∞ –≤—ñ–¥ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É.')
    async def leave(self, ctx):
        """–í—ñ–¥–∫–ª—é—á–∞—î –±–æ—Ç–∞ –≤—ñ–¥ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É."""
        if await self.leave_logic(ctx):
            await ctx.send("üëã –í–∏–π—à–æ–≤ –∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É.")
        else:
            await ctx.send("–ë–æ—Ç –Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π –¥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É.")

    @commands.command(name='play', aliases=['p'], help='–í—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ –ø—ñ—Å–Ω—é –∑–∞ URL –∞–±–æ –ø–æ—à—É–∫–æ–≤–∏–º –∑–∞–ø–∏—Ç–æ–º.')
    async def play(self, ctx, *, query: str):
        """–î–æ–¥–∞—î –ø—ñ—Å–Ω—é –¥–æ —á–µ—Ä–≥–∏ —Ç–∞ –ø–æ—á–∏–Ω–∞—î –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è."""
        guild_id = ctx.guild.id
        logging.info(f"[{guild_id}] Play command invoked by {ctx.author.name} with query: {query}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
        voice_client = discord.utils.get(self.bot.voice_clients, guild=ctx.guild)

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—ñ
        if not ctx.author.voice:
            await ctx.send(f"{ctx.author.mention}, –ø—ñ–¥–∫–ª—é—á—ñ—Ç—å—Å—è –¥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É —Å–ø–æ—á–∞—Ç–∫—É!")
            return

        # –Ø–∫—â–æ –±–æ—Ç –Ω–µ –≤ –∫–∞–Ω–∞–ª—ñ, –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –π–æ–≥–æ
        if not voice_client or not voice_client.is_connected():
            logging.info(f"[{guild_id}] Bot not connected, invoking join command.") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
            await ctx.invoke(self.join) # –í–∏–∫–ª–∏–∫–∞—î–º–æ –∫–æ–º–∞–Ω–¥—É join
            voice_client = discord.utils.get(self.bot.voice_clients, guild=ctx.guild) # –û–Ω–æ–≤–ª—é—î–º–æ voice_client
            if not voice_client: # –Ø–∫—â–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –Ω–µ –≤–¥–∞–ª–æ—Å—è
                logging.error(f"[{guild_id}] Failed to join voice channel after invoking join.") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
                await ctx.send("–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ –≤–∞—à–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É.")
                return
            logging.info(f"[{guild_id}] Successfully joined channel: {voice_client.channel.name}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
        # –Ø–∫—â–æ –±–æ—Ç –≤ —ñ–Ω—à–æ–º—É –∫–∞–Ω–∞–ª—ñ, –ø–µ—Ä–µ–º—ñ—â—É—î–º–æ
        elif voice_client.channel != ctx.author.voice.channel:
             try:
                 logging.info(f"[{guild_id}] Moving bot to channel: {ctx.author.voice.channel.name}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
                 await voice_client.move_to(ctx.author.voice.channel)
                 await ctx.send(f"–ü–µ—Ä–µ–º—ñ—Å—Ç–∏–≤—Å—è –¥–æ –∫–∞–Ω–∞–ª—É: **{ctx.author.voice.channel.name}**")
             except Exception as e:
                 logging.error(f"[{guild_id}] Error moving bot to channel {ctx.author.voice.channel.name}: {e}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
                 await ctx.send("–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–º—ñ—Å—Ç–∏—Ç–∏—Å—è –¥–æ –≤–∞—à–æ–≥–æ –∫–∞–Ω–∞–ª—É.")
                 return

        # –î–æ–¥–∞—î–º–æ —Ç—Ä–µ–∫ –¥–æ —á–µ—Ä–≥–∏
        if guild_id not in self.music_queues:
            self.music_queues[guild_id] = []

        # –ü–æ–∫–∏ —â–æ –Ω–µ –æ—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç—Ä–µ–∫, –ø—Ä–æ—Å—Ç–æ –¥–æ–¥–∞—î–º–æ –∑–∞–ø–∏—Ç
        logging.info(f"[{guild_id}] Adding query to queue: {query}") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
        self.music_queues[guild_id].append({'url': query, 'requester': ctx.author})
        await ctx.send(f"‚úÖ –î–æ–¥–∞–Ω–æ –¥–æ —á–µ—Ä–≥–∏: `{query}`")

        # –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –≥—Ä–∞—î, –ø–æ—á–∏–Ω–∞—î–º–æ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è
        if not voice_client.is_playing() and not voice_client.is_paused():
            logging.info(f"[{guild_id}] Nothing playing, calling play_next_song.") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
            await self.play_next_song(ctx)
        else:
            logging.info(f"[{guild_id}] Bot is already playing or paused. Query added to queue.") # –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è

    @commands.command(name='pause', help='–ü–æ—Å—Ç–∞–≤–∏—Ç–∏ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–∞ –ø–∞—É–∑—É.')
    async def pause(self, ctx):
        """–°—Ç–∞–≤–∏—Ç—å –º—É–∑–∏–∫—É –Ω–∞ –ø–∞—É–∑—É."""
        voice_client = discord.utils.get(self.bot.voice_clients, guild=ctx.guild)
        if voice_client and voice_client.is_playing():
            voice_client.pause()
            await ctx.send("‚è∏Ô∏è –í—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–∞ –ø–∞—É–∑—ñ.")
        else:
            await ctx.send("–ó–∞—Ä–∞–∑ –Ω—ñ—á–æ–≥–æ –Ω–µ –≥—Ä–∞—î –∞–±–æ –≤–∂–µ –Ω–∞ –ø–∞—É–∑—ñ.")

    @commands.command(name='resume', help='–í—ñ–¥–Ω–æ–≤–∏—Ç–∏ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è.')
    async def resume(self, ctx):
        """–í—ñ–¥–Ω–æ–≤–ª—é—î –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –º—É–∑–∏–∫–∏."""
        voice_client = discord.utils.get(self.bot.voice_clients, guild=ctx.guild)
        if voice_client and voice_client.is_paused():
            voice_client.resume()
            await ctx.send("‚ñ∂Ô∏è –í—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ.")
        else:
            await ctx.send("–ù—ñ—á–æ–≥–æ –≤—ñ–¥–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –∞–±–æ –º—É–∑–∏–∫–∞ –≤–∂–µ –≥—Ä–∞—î.")

    @commands.command(name='skip', aliases=['s'], help='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π —Ç—Ä–µ–∫.')
    async def skip(self, ctx):
        """–ü—Ä–æ–ø—É—Å–∫–∞—î –ø–æ—Ç–æ—á–Ω–∏–π —Ç—Ä–µ–∫."""
        voice_client = discord.utils.get(self.bot.voice_clients, guild=ctx.guild)
        if voice_client and (voice_client.is_playing() or voice_client.is_paused()):
            voice_client.stop() # –í–∏–∫–ª–∏—á–µ after -> play_next_song
            await ctx.send(f"‚è≠Ô∏è –¢—Ä–µ–∫ –ø—Ä–æ–ø—É—â–µ–Ω–æ {ctx.author.mention}.")
        else:
            await ctx.send("–ù—ñ—á–æ–≥–æ –ø—Ä–æ–ø—É—Å–∫–∞—Ç–∏.")

    @commands.command(name='stop', help='–ó—É–ø–∏–Ω–∏—Ç–∏ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –æ—á–∏—Å—Ç–∏—Ç–∏ —á–µ—Ä–≥—É.')
    async def stop(self, ctx):
        """–ó—É–ø–∏–Ω—è—î –º—É–∑–∏–∫—É —Ç–∞ –æ—á–∏—â–∞—î —á–µ—Ä–≥—É."""
        guild_id = ctx.guild.id
        voice_client = discord.utils.get(self.bot.voice_clients, guild=ctx.guild)

        if voice_client and (voice_client.is_playing() or voice_client.is_paused()):
            self.music_queues[guild_id] = [] # –û—á–∏—â–∞—î–º–æ —á–µ—Ä–≥—É
            voice_client.stop() # –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Ç—Ä–µ–∫
            if guild_id in self.current_song:
                del self.current_song[guild_id]
            # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏
            if guild_id in self.control_messages:
                try:
                    msg = await ctx.fetch_message(self.control_messages[guild_id])
                    await msg.delete()
                except (discord.NotFound, discord.Forbidden):
                    pass
                del self.control_messages[guild_id]
            await ctx.send("‚èπÔ∏è –í—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ, —á–µ—Ä–≥—É –æ—á–∏—â–µ–Ω–æ.")
        else:
            await ctx.send("–ù—ñ—á–æ–≥–æ –∑—É–ø–∏–Ω—è—Ç–∏.")

    @commands.command(name='queue', aliases=['q'], help='–ü–æ–∫–∞–∑–∞—Ç–∏ —á–µ—Ä–≥—É –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è.')
    async def queue(self, ctx):
        """–ü–æ–∫–∞–∑—É—î –ø–æ—Ç–æ—á–Ω—É —á–µ—Ä–≥—É –º—É–∑–∏–∫–∏."""
        guild_id = ctx.guild.id
        queue = self.music_queues.get(guild_id, [])

        if not queue and guild_id not in self.current_song:
            await ctx.send("–ß–µ—Ä–≥–∞ –ø–æ—Ä–æ–∂–Ω—è!")
            return

        embed = discord.Embed(title="üìÑ –ß–µ—Ä–≥–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è", color=discord.Color.purple())

        # –ü–æ—Ç–æ—á–Ω–∏–π —Ç—Ä–µ–∫
        if guild_id in self.current_song:
            song_info = self.current_song[guild_id]
            duration_str = format_duration(song_info.get('duration'))
            embed.add_field(name="üé∂ –ó–∞—Ä–∞–∑ –≥—Ä–∞—î", value=f"[{song_info.get('title', '–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç—Ä–µ–∫')}]({song_info.get('url', '#')}) | `{duration_str}` | –ó–∞–º–æ–≤–∏–≤(–ª–∞): {song_info['requester'].mention}", inline=False)

        # –ù–∞—Å—Ç—É–ø–Ω—ñ —Ç—Ä–µ–∫–∏
        if queue:
            next_up = []
            for i, item in enumerate(queue[:10]): # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ 10
                # –û—Å–∫—ñ–ª—å–∫–∏ –º–∏ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —ñ–Ω—Ñ–æ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ, –ø–æ–∫–∞–∑—É—î–º–æ –∑–∞–ø–∏—Ç
                next_up.append(f"`{i+1}.` {item['url']} (–ó–∞–º–æ–≤–∏–≤(–ª–∞): {item['requester'].mention})")

            if next_up:
                 embed.add_field(name="‚è≠Ô∏è –î–∞–ª—ñ –≤ —á–µ—Ä–∑—ñ", value="\n".join(next_up), inline=False)

            if len(queue) > 10:
                embed.set_footer(text=f"–©–µ {len(queue) - 10} —Ç—Ä–µ–∫—ñ–≤ —É —á–µ—Ä–∑—ñ...")
        elif guild_id in self.current_song: # –Ø–∫—â–æ –≥—Ä–∞—î —Ç—Ä–µ–∫, –∞–ª–µ —á–µ—Ä–≥–∞ –ø–æ—Ä–æ–∂–Ω—è
             embed.add_field(name="‚è≠Ô∏è –î–∞–ª—ñ –≤ —á–µ—Ä–∑—ñ", value="–ß–µ—Ä–≥–∞ –ø–æ—Ä–æ–∂–Ω—è.", inline=False)

        await ctx.send(embed=embed)

    @commands.command(name='nowplaying', aliases=['np'], help='–ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π —Ç—Ä–µ–∫.')
    async def nowplaying(self, ctx):
        """–ü–æ–∫–∞–∑—É—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç—Ä–µ–∫, —â–æ –∑–∞—Ä–∞–∑ –≥—Ä–∞—î."""
        guild_id = ctx.guild.id
        if guild_id in self.current_song:
            song_info = self.current_song[guild_id]
            player = song_info['player'] # YTDLSource
            # –ü–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –ø–æ–∑–∏—Ü—ñ—é –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è
            # voice_client = discord.utils.get(self.bot.voice_clients, guild=ctx.guild)
            # current_time = 0
            # if voice_client and voice_client.source:
                 # –ù–∞ –∂–∞–ª—å, discord.py –Ω–µ –Ω–∞–¥–∞—î –ª–µ–≥–∫–æ–≥–æ —Å–ø–æ—Å–æ–±—É –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å FFmpegPCMAudio
                 # –ú–æ–∂–Ω–∞ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ —á–∞—Å —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ, –∞–ª–µ —Ü–µ –Ω–µ –Ω–∞–¥—ñ–π–Ω–æ

            duration_str = format_duration(song_info.get('duration'))
            embed = discord.Embed(
                title="üé∂ –ó–∞—Ä–∞–∑ –≥—Ä–∞—î",
                description=f"[{song_info.get('title', '–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç—Ä–µ–∫')}]({song_info.get('url', '#')})",
                color=discord.Color.blue()
            )
            if song_info.get('thumbnail'):
                embed.set_thumbnail(url=song_info['thumbnail'])
            embed.add_field(name="–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å", value=duration_str, inline=True)
            embed.add_field(name="–ó–∞–º–æ–≤–∏–≤(–ª–∞)", value=song_info['requester'].mention, inline=True)
            # –î–æ–¥–∞—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å –±–∞—Ä, —è–∫—â–æ –º–æ–∂–ª–∏–≤–æ
            # embed.add_field(name="–ü—Ä–æ–≥—Ä–µ—Å", value=f"`{format_duration(current_time)} / {duration_str}`", inline=False)

            # –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏, —è–∫—â–æ –≤–æ–Ω–∏ —î
            view = None
            if guild_id in self.control_messages:
                try:
                    msg = await ctx.fetch_message(self.control_messages[guild_id])
                    view = MusicControls.from_message(msg, self.bot) # –ü–æ—Ç—Ä—ñ–±–Ω–æ –∞–¥–∞–ø—Ç—É–≤–∞—Ç–∏ MusicControls
                    # –ê–±–æ –ø—Ä–æ—Å—Ç–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π View
                    view = MusicControls(ctx, self)
                    # –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏ –ø–∞—É–∑–∏/–≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è
                    pause_button = discord.utils.get(view.children, custom_id="pause_resume")
                    voice_client = discord.utils.get(self.bot.voice_clients, guild=ctx.guild)
                    if voice_client and voice_client.is_paused():
                        pause_button.label = "–í—ñ–¥–Ω–æ–≤–∏—Ç–∏"
                        pause_button.emoji = "‚ñ∂Ô∏è"
                    else:
                        pause_button.label = "–ü–∞—É–∑–∞"
                        pause_button.emoji = "‚è∏Ô∏è"

                except (discord.NotFound, discord.Forbidden):
                    view = MusicControls(ctx, self) # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π, —è–∫—â–æ —Å—Ç–∞—Ä–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π
                    self.control_messages.pop(guild_id, None) # –í–∏–¥–∞–ª—è—î–º–æ –Ω–µ–¥—ñ–π—Å–Ω–∏–π ID
            else:
                 view = MusicControls(ctx, self) # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π, —è–∫—â–æ –Ω–µ –±—É–ª–æ

            # –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫—â–æ –≤–æ–Ω–æ —î —ñ –º–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ
            if guild_id in self.control_messages and view:
                 try:
                     old_msg = await ctx.fetch_message(self.control_messages[guild_id])
                     await old_msg.delete()
                 except (discord.NotFound, discord.Forbidden):
                     pass
                 del self.control_messages[guild_id]

            new_msg = await ctx.send(embed=embed, view=view)
            self.control_messages[guild_id] = new_msg.id

        else:
            await ctx.send("–ó–∞—Ä–∞–∑ –Ω—ñ—á–æ–≥–æ –Ω–µ –≥—Ä–∞—î.")

    # –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ–π –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –≤–∏—Ö–æ–¥—É
    @commands.Cog.listener()
    async def on_voice_state_update(self, member, before, after):
        # –Ø–∫—â–æ –±–æ—Ç –∑–∞–ª–∏—à–∏–≤—Å—è –æ–¥–∏–Ω —É –∫–∞–Ω–∞–ª—ñ
        if member.id == self.bot.user.id and after.channel is None: # –ë–æ—Ç –≤–∏–π—à–æ–≤ –∑ –∫–∞–Ω–∞–ª—É
             return # –í–∂–µ –æ–±—Ä–æ–±–ª–µ–Ω–æ –∫–æ–º–∞–Ω–¥–æ—é leave/stop –∞–±–æ play_next_song

        if before.channel and not after.channel and member.id != self.bot.user.id: # –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–π—à–æ–≤
            voice_client = discord.utils.get(self.bot.voice_clients, guild=member.guild)
            if voice_client and voice_client.channel == before.channel:
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∑–∞–ª–∏—à–∏–≤—Å—è —Ö—Ç–æ—Å—å –∫—Ä—ñ–º –±–æ—Ç–∞
                if len(voice_client.channel.members) == 1 and voice_client.channel.members[0].id == self.bot.user.id:
                    guild_id = member.guild.id
                    logging.info(f"–ë–æ—Ç –∑–∞–ª–∏—à–∏–≤—Å—è –æ–¥–∏–Ω —É –∫–∞–Ω–∞–ª—ñ {before.channel.name}. –ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ –≤–∏—Ö—ñ–¥.")
                    # –î–∞—î–º–æ —Ç—Ä–æ—Ö–∏ —á–∞—Å—É, –º–æ–∂–ª–∏–≤–æ —Ö—Ç–æ—Å—å –ø–æ–≤–µ—Ä–Ω–µ—Ç—å—Å—è
                    await asyncio.sleep(60)
                    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–µ —Ä–∞–∑
                    voice_client = discord.utils.get(self.bot.voice_clients, guild=member.guild) # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω
                    if voice_client and voice_client.channel == before.channel and len(voice_client.channel.members) == 1:
                        logging.info(f"–í–∏—Ö–æ–¥–∂—É –∑ –∫–∞–Ω–∞–ª—É {before.channel.name} —á–µ—Ä–µ–∑ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.")
                        # –ü–æ—Ç—Ä—ñ–±–µ–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è leave_logic, —Ü–µ –ø—Ä–æ–±–ª–µ–º–∞
                        # –ú–æ–∂–Ω–∞ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç–æ–≤–∏–π –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                        # –ê–±–æ –ø—Ä–æ—Å—Ç–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ disconnect
                        if guild_id in self.music_queues:
                            self.music_queues[guild_id].clear()
                        if guild_id in self.current_song:
                            del self.current_song[guild_id]
                        if guild_id in self.control_messages:
                             # –ü–æ—Ç—Ä—ñ–±–µ–Ω –¥–æ—Å—Ç—É–ø –¥–æ –∫–∞–Ω–∞–ª—É, –¥–µ –±—É–ª–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                             # –¶–µ —É—Å–∫–ª–∞–¥–Ω—é—î –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç—É—Ç
                             del self.control_messages[guild_id]
                        await voice_client.disconnect()
                        # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≤–∏—Ö—ñ–¥ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ, –∑–Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª)
                        # general_channel = discord.utils.find(lambda c: c.name == 'general', member.guild.text_channels)
                        # if general_channel:
                        #    await general_channel.send("–í–∏–π—à–æ–≤ –∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É —á–µ—Ä–µ–∑ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.")


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–≥–∞ –¥–æ –±–æ—Ç–∞ (–∑–∞–∑–≤–∏—á–∞–π –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –≤ main.py)
async def setup(bot):
    await bot.add_cog(MusicCog(bot))